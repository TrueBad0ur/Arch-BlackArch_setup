Installing arch linux

 ___________________
| Disk partitioning |
|___________________|

fdisk -l

# here we'll see all available disks, our current disk has already been separated into 3 parts
# we should write our system on it (formatting)

fdisk /dev/sda

# For example we'll take 100 Gb disk, parts will be: 1) root - 20Gb 2) swap-area - 2Gb 3) home - 78Gb

1-st partition: root
o
n
enter
enter
enter
+20G
Yes
a    (set boot flag)



2-nd partition: swap-area (if there isn't enough memory left and no swap-partition, linux will kill processes)
n
enter
enter
enter
+2G
type 
enter
82 

3-rd partition:
n
enter
enter
enter
enter
w

 ____________________________________________________________________
| Format the partition with the ext4 file system using the mkfs.ext4 |
|____________________________________________________________________|

mkfs.ext4 /dev/sda1
mkfs.ext4 /dev/sda3

 ________________________
| Net connection (wired) |
|________________________|

systemctl enable dhcpcd.service
systemctl start dhcpcd.service

 ________________________
| Net connection (wi-fi) |
|________________________|

cp /netctl/examples/wireless-wpa /etc/netctl/NAMEOFYOURNETWORK
nano /etc/netctl/NAMEOFYOURNETWORK
netctl start NAMEOFYOURNETWORK

 __________
| Mounting |
|__________|

mount /dev/sda1 /mnt
mkdir /mnt/home 
mount /dev/sda3 /mnt/home
mount

----------------

# genfstab will later detect mounted file systems and swap space
# Use the pacstrap script to install the base package group

pacstrap -i /mnt base
genfstab -U -p /mnt >> /mnt/etc/fstab

 _________________________________
| Change root into the new system |
|_________________________________|

arch-chroot /mnt

 __________
| Packages |
|__________|

pacman -S grub-bios linux-headers linux-lts linux-lts-headers wpa_supplicant wireless_tools

 ____________________________
| Time zone and Localization |
|____________________________|

nano /etc/locale.gen
ln -s /usr/share/zoneinfo/America/Detroit /etc/localtime
echo "LC_ALL=en_US.UTF-8" >> /etc/environment
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen en_US.UTF-8
hwclock —s -u

 _______________
| Root password |
|_______________|

passwd

 ______
| GRUB |
|______|

# https://serverfault.com/questions/857255/what-is-grub-install-actually-doing

grub-install —-target=i386-pc -—recheck /dev/sda
cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo
grub-mkconfig -o /boot/grub/grub.cfg

exit

umount /mnt/home
umount /mnt

reboot
 __________
| Add User |
|__________|

user:
	useradd --create-home username
	passwd username
	usermod -aG wheel username
add user to /etc/sudoers

------->         LOGIN TO YOUR USER'S ACCOUNT AND DO NEXT LINES        <-------

pacman -S sudo
sudo pacman -S xorg-server xorg-xinit xorg-apps mesa
sudo pacman -S xf86-video-vesa
sido pasman -S alsa-lib alsa-utils alsa-oss alsa-plugins
sudo pacman -S ttf-droid ttf-dejavu ttf-liberation
sudo pacman -S --needed base-devel git wget yajl

git clone https://aur.archlinux.org/package-query.git
cd packa…
makepkg -si

git clone https://aur.archlinux.org/yaourt.git
cd packa…
makepkg -si

yaourt -S archey3

Add printing beautiful info about system at terminal start:
nano .bashrc
add line at the end     ->      archey3

 _______________
| Login service |
|_______________|

sudo pacman -S slim
sudo systemctl enable slim.service
mv background.jpg /usr/share/slim/themes/default/
mv panel.png /usr/share/slim/themes/default/
mv slim.theme /usr/share/slim/themes/default/

 _________________________
| Awesome WM installation |
|_________________________|

sudo pacman -S awesome
cp /etc/X11/xinit/xinitrc ~/.xinitrc

nano .xinitrc
# comment all except of XINIT.D (delete/comment all lines except the line where XINIT.D is mentioned)
(add to the end of the file) exec awesome
(add to the end of the file) xrdb ~/.Xresources &
(Next 3 lines are optional, if you download my archive with awesome, just copy-paste folder "awesome" from archive to ~/.config/    it will be ./config/awesome )
mkdir -p .config/awesome
cp /etc/xdg/awesome/rc.lua ~/.config/awesome
cp -r /usr/share/awesome/* .config/awesome

sudo pacman -S rxvt-unicode pcmanfm
pacman -S zlib
pacman -Sy xorg

------->         REBOOT        <-------

In awesome:
(just a notion how to exit awesome wm)
turn of wm mode (ctrl/alt + F1/F2/F3/F4/F5)

pacman -Sy xterm
pacman -S terminator (optional)
sudo pacman -S ttf-dejavu ttf-liberation noto-fonts
sudo pacman -S dolphin (optional)
sudo pacman -S exfat-utils fuse-exfat (optional)

# in /etc/environment should be n_US.UTF-8

(optional)
 _____________
| Virtual Box |
|_____________|

sudo pacman -S virtualbox
sudo modprobe -a vboxdrv
sudo echo vboxdrv > /etc/modules-load.d/virtualbox.conf
sudo gpasswd -a $USER vboxusers

(optional)
 _______
| Audio |
|_______|

pacman -S pulseaudio 
pacman -S pulseaudio-alsa 

pulseaudio --start 
pavucontrol

 __________________________________________
|__________BLACKARCH INSTALLATION__________|
|__________________________________________|

sudo pacman -Syyu
curl -O https://blackarch.org/strap.sh > strap.sh
sha1sum strap.sh
sudo chmod a+x strap.sh
sudo ./strap.sh
sudo pacman -Sgg | grep blackarch | cut -d' ' -f2 | sort -u
$ sudo pacman -S blackarch

1 program - sudo pacman -S pdfcrack
sudo pacman -Sg | grep blackarch
pack of programs - sudo pacman -S blackarch-cracker
https://www.ostechnix.com/install-blackarch-linux-arch-linux/

(optional)
 _____________________
| Some useful scripts |
|_____________________|

# Unmount usb

 unm_usb() { name=$1;
             sudo umount /dev/disk/by-label/$name;
}

# New wifi

setup-wifi () { name=$1;
        sudo cp /etc/netctl/examples/wireless-wpa /etc/netctl/$name;
        sudo nano /etc/netctl/$name;
        netctl start $name ;
}

# lock screen (laptop)

alias lock='i3lock -i ~/Images/arb.png'								1-st option
alias lock='i3lock --no-unlock-indicator -i ~/Photos/arbeit.png'	2-nd

# lock screen and sleep (pc)

alias locker='lock & systemctl suspend'

# Show available wifi's

sudo iwlist wlp3s0 scan | grep ESSID

# Already known wifi connection

alias COMMAND='sudo netctl NAMEOFYOURNETWORK'

# Info about system

archey3

 ________________
| THINGS TO KNOW |
|________________|

to open anything click right button (Lol arch is to hard, s0rry), will be opened awesome wm panel

nm-connection-editor - create new connection, firstly, you need to enable and start NetworkManager
to do so: systemctl enable NetworkManager
	  systemctl start NetworkManager

create desktop entry (in awesome wm case you create a launcher of the app in the wm panel):
nano ~/.local/share/applications/NAMEOFAPP.desktop
from arch wiki(write this into file):

[Desktop Entry]
# The type as listed above
Type=Application
# The version of the desktop entry specification to which this file complies
Version=1.0
# The name of the application
Name=jMemorize
# A comment which can/will be used as a tooltip
Comment=Flash card based learning tool
# The path to the folder in which the executable is run
Path=/opt/jmemorise
# The executable of the application, possibly with arguments.
Exec=jmemorize
# The name of the icon that will be used to display this entry
Icon=jmemorize
# Describes whether this application needs to be run in a terminal or not
Terminal=false
# Describes the categories in which this entry should be shown
Categories=Education;Languages;Java;

Basic example of such file:
[Desktop Entry] 
Encoding=UTF-8 
Version=1.0 
Type=Application 
NoDisplay=false 
Exec=/path/to/eclipse/APP 
Name=APP Comment=Launcher for APP

Repositories folder -> /etc/pacman.conf
